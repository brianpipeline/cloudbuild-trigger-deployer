steps:
  - name: "gcr.io/cloud-builders/git"
    id: "Clone repo"
    entrypoint: "bash"
    args: ["-c", "git clone $_REPO_TO_CLONE"]

  - name: "gcr.io/cloud-builders/gcloud"
    id: "Run pipeline tests"
    entrypoint: "bash"
    dir: "${_REPO_NAME}"
    args:
      - "-eEuo"
      - "pipefail"
      - "-c"
      - |-
        #!/bin/bash
        chmod +x ./tests/submissions.sh
        ./tests/submissions.sh
  
  - name: "us-central1-docker.pkg.dev/cloud-build-pipeline-396819/cloud-build-helper-docker/cloud-build-helper-docker:0.1"
    id: "Run deploy pipeline"
    entrypoint: "bash"
    dir: "${_REPO_NAME}"
    args:
      - "-eEuo"
      - "pipefail"
      - "-c"
      - |-
        #!/bin/bash
        source deploy-pipeline.sh
        deployPipelines "$PROJECT_ID"
    env:
      - "PROJECT_ID=$PROJECT_ID"

  - name: "us-central1-docker.pkg.dev/cloud-build-pipeline-396819/cloud-build-helper-docker/cloud-build-helper-docker:0.1"
    id: "Reply back to pipeline"
    entrypoint: "bash"
    args:
      - "-eEuo"
      - "pipefail"
      - "-c"
      - |-
        #!/bin/bash
        source reply-to-queue.sh
        reply "$_REPLY_TOPIC" "Message from Cloud Build: Pipeline completed successfully"

options:
  substitutionOption: "ALLOW_LOOSE"
substitutions:
  _REPO_TO_CLONE: $(body.message.data.git.clone_url)
  _REPO_NAME: $(body.message.data.git.name)
  _REPLY_TOPIC: $(body.message.data.reply_topic)
